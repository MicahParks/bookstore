// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A bookstore coding challenge",
    "title": "bookstore",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/api/alive": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Used by Caddy or other reverse proxy to determine if the service is alive.",
        "operationId": "alive",
        "responses": {
          "200": {
            "description": "Service is alive."
          }
        }
      }
    },
    "/api/books": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Read the book data for the given ISBNs.",
        "operationId": "bookRead",
        "parameters": [
          {
            "description": "The ISBNs of the books whose data is to be read.",
            "name": "isbns",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A map of ISBNs to book data for the requested books.",
            "schema": {
              "additionalProperties": {
                "$ref": "#/definitions/Book"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Delete the given books.",
        "operationId": "bookDelete",
        "parameters": [
          {
            "description": "The ISBNs of the books to delete.",
            "name": "isbns",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The books have been deleted."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/books/{operation}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Insert, update, or upsert books to the library.",
        "operationId": "bookWrite",
        "parameters": [
          {
            "description": "The array of books to insert, update, or upsert to the library.",
            "name": "books",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Book"
              }
            }
          },
          {
            "enum": [
              "insert",
              "update",
              "upsert"
            ],
            "type": "string",
            "description": "The write operation to perform with the book data.",
            "name": "operation",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The books have been written to the library."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/checkin": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Check in the given books.",
        "operationId": "bookCheckin",
        "parameters": [
          {
            "description": "The ISBNs of the books to check in.",
            "name": "isbns",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The books have been checked in."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/checkout": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Check out the given books.",
        "operationId": "bookCheckout",
        "parameters": [
          {
            "description": "The ISBNs of the books to check out.",
            "name": "isbns",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The books have been checked out."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/history": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Get the history for the given books.",
        "operationId": "bookHistory",
        "parameters": [
          {
            "description": "The ISBNs of the books to get the history for.",
            "name": "isbns",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A mapping of book ISBNs to book history.",
            "schema": {
              "additionalProperties": {
                "$ref": "#/definitions/History"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Get the checked in or checked out status for the given books.",
        "operationId": "bookStatus",
        "parameters": [
          {
            "description": "The ISBNs of the books to get the status for.",
            "name": "isbns",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A mapping of book ISBNs to book status.",
            "schema": {
              "additionalProperties": {
                "$ref": "#/definitions/Status"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Book": {
      "properties": {
        "author": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isbn": {
          "type": "string",
          "x-go-name": "ISBN"
        },
        "title": {
          "type": "string"
        }
      },
      "x-nullable": false
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "x-nullable": false
        },
        "message": {
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "History": {
      "properties": {
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Status"
          },
          "x-nullable": false
        },
        "isbn": {
          "type": "string"
        }
      }
    },
    "Status": {
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "$ref": "#/definitions/StatusType"
        }
      },
      "x-nullable": false
    },
    "StatusType": {
      "type": "string",
      "enum": [
        "acquired",
        "checkin",
        "checkout"
      ]
    }
  },
  "tags": [
    {
      "description": "Endpoints that perform actions on bookstore data.",
      "name": "api"
    },
    {
      "description": "Endpoints required by the system that are not public facing and do not affect bookstore data.",
      "name": "system"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A bookstore coding challenge",
    "title": "bookstore",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/api/alive": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Used by Caddy or other reverse proxy to determine if the service is alive.",
        "operationId": "alive",
        "responses": {
          "200": {
            "description": "Service is alive."
          }
        }
      }
    },
    "/api/books": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Read the book data for the given ISBNs.",
        "operationId": "bookRead",
        "parameters": [
          {
            "description": "The ISBNs of the books whose data is to be read.",
            "name": "isbns",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A map of ISBNs to book data for the requested books.",
            "schema": {
              "additionalProperties": {
                "$ref": "#/definitions/Book"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Delete the given books.",
        "operationId": "bookDelete",
        "parameters": [
          {
            "description": "The ISBNs of the books to delete.",
            "name": "isbns",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The books have been deleted."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/books/{operation}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Insert, update, or upsert books to the library.",
        "operationId": "bookWrite",
        "parameters": [
          {
            "description": "The array of books to insert, update, or upsert to the library.",
            "name": "books",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Book"
              }
            }
          },
          {
            "enum": [
              "insert",
              "update",
              "upsert"
            ],
            "type": "string",
            "description": "The write operation to perform with the book data.",
            "name": "operation",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The books have been written to the library."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/checkin": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Check in the given books.",
        "operationId": "bookCheckin",
        "parameters": [
          {
            "description": "The ISBNs of the books to check in.",
            "name": "isbns",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The books have been checked in."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/checkout": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Check out the given books.",
        "operationId": "bookCheckout",
        "parameters": [
          {
            "description": "The ISBNs of the books to check out.",
            "name": "isbns",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The books have been checked out."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/history": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Get the history for the given books.",
        "operationId": "bookHistory",
        "parameters": [
          {
            "description": "The ISBNs of the books to get the history for.",
            "name": "isbns",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A mapping of book ISBNs to book history.",
            "schema": {
              "additionalProperties": {
                "$ref": "#/definitions/History"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Get the checked in or checked out status for the given books.",
        "operationId": "bookStatus",
        "parameters": [
          {
            "description": "The ISBNs of the books to get the status for.",
            "name": "isbns",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A mapping of book ISBNs to book status.",
            "schema": {
              "additionalProperties": {
                "$ref": "#/definitions/Status"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Book": {
      "properties": {
        "author": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isbn": {
          "type": "string",
          "x-go-name": "ISBN"
        },
        "title": {
          "type": "string"
        }
      },
      "x-nullable": false
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "x-nullable": false
        },
        "message": {
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "History": {
      "properties": {
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Status"
          },
          "x-nullable": false
        },
        "isbn": {
          "type": "string"
        }
      }
    },
    "Status": {
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "$ref": "#/definitions/StatusType"
        }
      },
      "x-nullable": false
    },
    "StatusType": {
      "type": "string",
      "enum": [
        "acquired",
        "checkin",
        "checkout"
      ]
    }
  },
  "tags": [
    {
      "description": "Endpoints that perform actions on bookstore data.",
      "name": "api"
    },
    {
      "description": "Endpoints required by the system that are not public facing and do not affect bookstore data.",
      "name": "system"
    }
  ]
}`))
}
