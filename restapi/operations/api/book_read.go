// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// BookReadHandlerFunc turns a function with the right signature into a book read handler
type BookReadHandlerFunc func(BookReadParams) middleware.Responder

// Handle executing the request and returning a response
func (fn BookReadHandlerFunc) Handle(params BookReadParams) middleware.Responder {
	return fn(params)
}

// BookReadHandler interface for that can handle valid book read params
type BookReadHandler interface {
	Handle(BookReadParams) middleware.Responder
}

// NewBookRead creates a new http.Handler for the book read operation
func NewBookRead(ctx *middleware.Context, handler BookReadHandler) *BookRead {
	return &BookRead{Context: ctx, Handler: handler}
}

/* BookRead swagger:route POST /api/books api bookRead

Read the book data for the given ISBNs.

*/
type BookRead struct {
	Context *middleware.Context
	Handler BookReadHandler
}

func (o *BookRead) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewBookReadParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
