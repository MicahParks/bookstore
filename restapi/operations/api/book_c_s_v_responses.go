// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/MicahParks/bookstore/models"
)

// BookCSVOKCode is the HTTP code returned for type BookCSVOK
const BookCSVOKCode int = 200

/*BookCSVOK The CSV file containing the Book data and most recent Status data of all books.

swagger:response bookCSVOK
*/
type BookCSVOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewBookCSVOK creates BookCSVOK with default headers values
func NewBookCSVOK() *BookCSVOK {

	return &BookCSVOK{}
}

// WithPayload adds the payload to the book c s v o k response
func (o *BookCSVOK) WithPayload(payload io.ReadCloser) *BookCSVOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the book c s v o k response
func (o *BookCSVOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BookCSVOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*BookCSVDefault Unexpected error.

swagger:response bookCSVDefault
*/
type BookCSVDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBookCSVDefault creates BookCSVDefault with default headers values
func NewBookCSVDefault(code int) *BookCSVDefault {
	if code <= 0 {
		code = 500
	}

	return &BookCSVDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the book c s v default response
func (o *BookCSVDefault) WithStatusCode(code int) *BookCSVDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the book c s v default response
func (o *BookCSVDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the book c s v default response
func (o *BookCSVDefault) WithPayload(payload *models.Error) *BookCSVDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the book c s v default response
func (o *BookCSVDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BookCSVDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
