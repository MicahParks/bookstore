// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// BookCheckinHandlerFunc turns a function with the right signature into a book checkin handler
type BookCheckinHandlerFunc func(BookCheckinParams) middleware.Responder

// Handle executing the request and returning a response
func (fn BookCheckinHandlerFunc) Handle(params BookCheckinParams) middleware.Responder {
	return fn(params)
}

// BookCheckinHandler interface for that can handle valid book checkin params
type BookCheckinHandler interface {
	Handle(BookCheckinParams) middleware.Responder
}

// NewBookCheckin creates a new http.Handler for the book checkin operation
func NewBookCheckin(ctx *middleware.Context, handler BookCheckinHandler) *BookCheckin {
	return &BookCheckin{Context: ctx, Handler: handler}
}

/* BookCheckin swagger:route POST /api/checkin api bookCheckin

Check in the given books.

*/
type BookCheckin struct {
	Context *middleware.Context
	Handler BookCheckinHandler
}

func (o *BookCheckin) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewBookCheckinParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
